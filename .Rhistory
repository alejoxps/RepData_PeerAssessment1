data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
library(reshape2)
sp <- ggplot(tips, aes(x=total_bill, y=tip/total_bill))
sp <- ggplot(tips, aes(x=total_bill, y=tip/total_bill)) + geom_point(shape=1)
install.packages("ggplot2")
sp <- ggplot(tips, aes(x=total_bill, y=tip/total_bill)) + geom_point(shape=1)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
g <- ggplot(movies, aes(votes, rating))
movies
Viev(movies)
View(movies)
sqldf
library(sqldf)
install.packages("sqldf")
install.packages("sqldf")
contact <- read.table("C:\\Users\\KeyData\\AppData\\Local\\Temp\\RtmpYDMyu8\\data18106b341298", quote="\"")
View(contact)
contact <- read.delim("C:\\Users\\KeyData\\AppData\\Local\\Temp\\RtmpYDMyu8\\data18101b1a3284", header=F)
View(contact)
nchar(contact[0])
nchar(contact[1])
nchar(strtrim(contact[1])
)
install.packages("stringr", dependencies=TRUE)
nchar(str_trim(contact[1])
)
library(stringr)
nchar(str_trim(contact[1]))
contact[1]
contact[1][1]
con = url("http://biostat.jhsph.edu/~jleek/contact.html ")
html=readLines(con)
close(con)
html
nchar(html[10])
nchar(html[12])
nchar(html[20])
nchar(html[30])
nchar(html[100])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
sum(x$V4)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x$V3)
sum(x$V4)
View(x)
colSums(x)
colSums(x[,2:])
colSums(x[,2:,])
colSums(x[,2:8])
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
colSums(x[,2:8])
getdata.data.ss06hid <- read.csv("~/Downloads/getdata-data-ss06hid.csv")
View(getdata.data.ss06hid)
data<-getdata.data.ss06hid
data['agricultureLogical']<-data$ACR==3 &data$AGS==6
which(data$agricultureLogical)
library(jpeg)
install.packages("jpeg")
library(jpeg)
readJPEG("C:\\Users\\KeyData\\Downloads\\getdata-jeff.jpg",native=TRUE)
photo<-readJPEG("C:\\Users\\KeyData\\Downloads\\getdata-jeff.jpg",native=TRUE)
?quantile
quantile(photo,probs=c(0.3,0.8))
getdata.data.EDSTATS_Country <- read.csv("~/Downloads/getdata-data-EDSTATS_Country.csv")
View(getdata.data.EDSTATS_Country)
getdata.data.GDP <- read.csv("~/Downloads/getdata-data-GDP.csv")
View(getdata.data.GDP)
names(getdata.data.GDP$X)<-'CountryCode'
View(getdata.data.GDP)
names(getdata.data.GDP[1])<-'CountryCode'
View(getdata.data.GDP)
names(getdata.data.GDP)[1]<-'CountryCode'
View(getdata.data.GDP)
library(plyr)
join(getdata.data.EDSTATS_Country,getdata.data.GDP)
data<-join(getdata.data.EDSTATS_Country,getdata.data.GDP)
View(data)
data<-data[order(data$Gross.domestic.product.2012)]
data<-data[order(data$Gross.domestic.product.2012),]
View(data)
data<-data[order(data$Gross.domestic.product.2012)]
data<-data[order(data$Gross.domestic.product.2012),]
View(data)
getdata.data.GDP <- read.csv("~/Downloads/getdata-data-GDP.csv",skip=4)
View(getdata.data.GDP)
?read.csv
getdata.data.GDP <- read.csv("~/Downloads/getdata-data-GDP.csv",skip=4,blank.lines.skip=TRUE)
View(getdata.data.GDP)
names(getdata.data.GDP)[1]<-'CountryCode'
data<-join(getdata.data.EDSTATS_Country,getdata.data.GDP)
View(data)
data<-data[order(data$X.1),]
View(data)
data<-data[order(as.numeric(data$X.1)),]
View(data)
data<-data[which(data$X.1=''),]
data<-data[which(data$X.1==''),]
View(data)
data<-join(getdata.data.EDSTATS_Country,getdata.data.GDP)
data<-data[which(data$X.1!=''),]
View(data)
data<-data[order(data$X.1),]
View(data)
data<-data[order(as.numeric(data$X.1)),]
View(data)
data$X.1<-as.numeric(data$X.1)
data<-data[order(as.numeric(data$X.1)),]
View(data)
names(getdata.data.GDP)[1]<-'CountryCode'
data<-join(getdata.data.EDSTATS_Country,getdata.data.GDP)
View(data)
data$X.1<-as.numeric(data$X.1)
data<-data[order(data$X.1,]
data<-data[order(data$X.1),]
View(data)
getdata.data.GDP <- read.csv("~/Downloads/getdata-data-GDP.csv", header=F)
View(getdata.data.GDP)
names(getdata.data.GDP)[1]<-'CountryCode'
data<-join(getdata.data.EDSTATS_Country,getdata.data.GDP)
View(data)
?order
data<-data[order(data$X.1,decreasing=TRUE),]
data<-data[order(data$V2,decreasing=TRUE),]
View(data)
OEDC<-data[which(data$Income.Group=='High income: OECD')]
OEDC<-data[which(data$Income.Group=='High income: OECD'),'V2']
View(OEDC)
mean(OEDC)
NONOEDC<-data[which(data$Income.Group=='High income: nonOECD'),'V2']
mean(NONOEDC)
NONOEDC<-data[which(data$Income.Group=='High income: nonOECD'),'V2']
View(NONOEDC)
mean(NONOEDC)
mean(NONOEDC,na.omit)
mean(NONOEDC,na.omit=TRUE)
?mean
mean(NONOEDC,na.rm)
mean(NONOEDC,na.rm=TRUE)
data$q<-quantile(data$V2)
data$q<-quantile(data$V2,na.rm=TRUE)
quantile(data$V2,na.rm=TRUE)
rowQuantiles(data$V2,na.rm=TRUE)
install.packages("matrixStats")
rowQuantiles(data$V2,na.rm=TRUE)
library(matrixStats)
rowQuantiles(data$V2,na.rm=TRUE)
rowQuantiles(data$V2)
?rowQuantiles
colQuantiles(data$V2)
table(data$Income.Group)
table(quantile(data$V2),data$Income.Group)
table(quantile(data$V2,na.rm=TRUE),data$Income.Group)
table(data$V2,data$Income.Group)
`getdata.data.ss06hid.(1)` <- read.csv("~/Downloads/getdata-data-ss06hid (1).csv")
View(`getdata.data.ss06hid.(1)`)
data<-getdata.data.ss06hid.(1)
data<-`getdata.data.ss06hid.(1)`
data
strsplit(names(data))
?strsplit
strsplit(names(data),"wgtp")
getdata.data.GDP <- read.csv("~/Downloads/getdata-data-GDP.csv", header=F)
View(getdata.data.GDP)
data2<-gsub(",","",getdata.data.GDP$V5)
View(data2)
str(data2)
mean(as.numeris(data2))
mean(as.numeric(data2))
mean(as.numeric(data2),na.rm=TRUE)
?mean
data2<-as.numeric(data2)
str(data2)
mean(data2)
mean(data2,na.rm=TRUE)
View(data2)
data2<-na.omit(data2)
View(data2)
mean(data2)
?str_trim
data2 <- read.csv("~/Downloads/getdata-data-GDP (1).csv", header=F)
View(data2)
data2<-gsub(" ","",gsub(",","",getdata.data.GDP$V5))
View(data2)
data2<-na.omit(data2)
View(data2)
mean(data2)
mean(na.rm(as.numeric(data2)))
mean(na.omit(as.numeric(data2)))
data2 <- read.csv("~/Downloads/getdata-data-GDP (1).csv", header=F)
View(data2)
data2<-as.numeric(data2)
data2<-as.numeric(data2$v5)
View(data2)
data2 <- read.csv("~/Downloads/getdata-data-GDP (1).csv", header=F)
View(data2)
data2<-as.numeric(data2$V5)
data2 <- read.csv("~/Downloads/getdata-data-GDP (1).csv", header=F)
View(data2)
data2<-as.numeric(data2$V5)
View(data2)
data2 <- read.csv("~/Downloads/getdata-data-GDP (1).csv", header=F)
View(data2)
data2$V5<-gsub(" ","",data2$V5)
View(data2)
data2$V5<-gsub(",","",data2$V5)
View(data2)
data2$V5<-gsub(" ","",data2$V5)
View(data2)
data2$V5<-as.numeric(data2$V5)
View(data2)
str(data2$V5)
mean(data2V5)
mean(data2$V5)
mean(data2$V5,na.rm=TRUE)
avera
grep("^United",data2$V1)
grep("^United",data2$V4)
data1 <- read.csv("~/Downloads/getdata-data-EDSTATS_Country (1).csv")
View(data1)
names(data2)[1]<-'CountryCode'
package(plyr)
library(plyr)
data3<-join(data1,data2)
grep("*Fiscal*[jJ]une",data3$Special.Notes)
grep("*Fiscal*[jJ]une*",data3$Special.Notes)
grep(".*Fiscal.*.[jJ]une.*",data3$Special.Notes)
View(data3[grep(".*Fiscal.*.[jJ]une.*",data3$Special.Notes),]
)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(sampleTimes
)
nrow(grep("^2012",sampleTimes)
)
str(sampleTimes)
nrow(which(format(sampleTimes,"%Y")==2012)
)
which(format(sampleTimes,"%Y")==2012)
View(which(format(sampleTimes,"%Y")==2012))
View(which(format(sampleTimes,"%Y")==2012&&format(sampleTimes,"%A")=="Monday")
)
View(which(format(sampleTimes,"%Y")==2012&format(sampleTimes,"%A")=="Monday")
)
View(which(format(sampleTimes,"%Y")== "2012" & format(sampleTimes,"%A")=="Monday")
)
View(which(format(sampleTimes,"%Y")== "2012"))
View(which(format(sampleTimes,"%Y")== "2012" & format(sampleTimes,"%A")=="MONDAY"))
format(sampleTimes,"%A")
View(which(format(sampleTimes,"%Y")== "2012" & format(sampleTimes,"%A")=="lunes"))
data2<-na.exclude(data2)
View(data2)
data2 <- read.csv("~/Downloads/getdata-data-GDP (1).csv", header=F)
View(data2)
data2_<-data2[!which(is.na(data2$V2)),]
View(data2_)
sumarry(data2$V2)
summary(data2$V2)
?is.na
data2_<-data2[!which(NA==(data2$V2)),]
View(data2_)
data2_<-data2[which(NA==(data2$V2)),]
View(data2_)
data2_<-data2[which(NA==data2$V2),]
?na.omit
data2_<-na.omit(data2[,1:5])
data2_<-data2[which(NA==data2$V2),]
View(data2_)
data2_<-na.omit(data2[,1:5])
View(data2_)
View(data2)
data1_<-na.omit(data1[,1:5])
View(data1_)
data2 <- read.csv("~/Downloads/getdata-data-GDP (2).csv", header=F)
View(data2)
data2_<-data2[which(is.na(data2$V2)),]
View(data2_)
data2 <- read.csv("~/Downloads/getdata-data-GDP (2).csv", header=F)
View(data2)
data2_<-data2[which(is.na(data2$V2)),]
View(data2_)
str(data2$V2)
data2 <- read.csv("~/Downloads/getdata-data-GDP (2).csv", header=F)
View(data2)
data2_<-data2
str(data2$V2)
data2_$V2<-as.numeric(data2_$V2)
str(data2$V2)
data2_$V2<-as.numeric(as.caracter(data2_$V2))
data2_$V2<-as.numeric(as.character(data2_$V2))
str(data2$V2)
str(data2_$V2)
summary(data2_$V2)
str(data2$V2)
View(data2_)
data3 <- read.csv("~/Downloads/getdata-data-GDP (1).csv", header=F)
View(data3)
data3$V5<-gsub(" ","",data3$V5)
data3$V5<-gsub(",","",data3$V5)
mean(as.numeric(data3$V5))
data<-read.csv("activity.csv",colClasses = "character")
summary(data)
setwd('C:\\Users\\KeyData\\Desktop\\Reproducible Research\\RepData_PeerAssessment1')
data<-read.csv("activity.csv",colClasses = "character")
summary(data)
data<-read.csv("activity.csv")
#data$steps<-as.numeric(data$steps)
summary(data)
data2<-na.rm(data)
data2<-na.omit(data)
data2
aggdata <-aggregate(data2, by=list(data$date),
FUN=mean, na.rm=TRUE)
aggdata <-aggregate(data2, by=list(data2$date),
FUN=mean, na.rm=TRUE)
tapply(data2$steps, data2$date, mean)
meandata<-tapply(data2$steps, data2$date, mean)
View(meandata)
data2<-na.omit(data)
meandata<-tapply(data2$steps, data2$date, mean)
View(meandata)
View(data2)
meandata<-tapply(data2$steps, data2$date, mean(na.rm=TRUE))
data2<-[!is.na(data)]
data2<-na.omit(data)
View(data)
data2<-na.omit(data)
meandata<-tapply(data2$steps, data2$date, mean(na.rm=TRUE))
meandata<-tapply(data2$steps, data2$date, mean)
view(meandata)
View(meandata)
?hist
?median
mean_interval<-tapply(data2$steps, data2$interval, mean)
View(mean_interval)
?sapply
mean_interval<-sapply(data2$steps, data2$interval, mean)
mean_each_day<-tapply(data2$steps, data2$date, mean)
View(mean_each_day)
aggdata <-aggregate(data2, by=list(data2$interval),
FUN=mean, na.rm=TRUE)
?aggregate
aggdata <-aggregate(data2$steps, by=list(data2$interval),
FUN=mean, na.rm=TRUE)
View(aggdata)
aggdata <-aggregate(data2$steps, by=list(data2$date),
FUN=mean, na.rm=TRUE)
View(aggdata)
hist(aggdata)
hist(aggdata$x)
?count
View((!complete.cases(data)))
!complete.cases(data)
View(data[(!complete.cases(data)),])
View(mean_interval)
data_complete<-data
data_complete<-na.omit(data)
View(data_complete)
data_complete<-!na.omit(data)
data_incomplete<-data[which(data$steps==NA),2:3]
View(data_incomplete)
data_incomplete<-data[is.na(data$steps),2:3]
View(data_incomplete)
data_incomplete<- merge(data_incomplete,mean_interval,by="interval")
mean_interval<-aggregate(data2$steps, by=list(data2$interval),
FUN=mean, na.rm=TRUE)
colnames(mean_interval)<-c("interval","steps")
data_incomplete<- merge(data_incomplete,mean_interval,by="interval")
View(data_incomplete)
data_complete <- rbind(data_complete, data_incomplete)
View(data_complete)
data_incomplete
data_complete<-na.omit(data)
data_incomplete<-data[is.na(data$steps),2:3]
data_incomplete<- merge(data_incomplete,mean_interval,by="interval")
data_complete <- rbind(data_complete, data_incomplete)
str(data_complete)
View(data_complete)
sum(!complete.cases(data_complete))
mean_each_day_complete<-tapply(data_complete$steps, data_complete$date, mean)
hist(mean_each_day_complete,main="Mean Steps by Day",xlab="Mean Each Day")
mean(mean_each_day_complete)
median(mean_each_day_complete)
data2<-na.omit(data)
mean_each_day<-tapply(data2$steps, data2$date, mean)
hist(mean_each_day,main="Mean Steps by Day",xlab="Mean Each Day")
mean(mean_each_day,na.rm=TRUE)
median(mean_each_day,na.rm=TRUE)
?weekend
?weekdays
week<-weekdays(data_complete[1:10,2])
week<-weekdays(as.Date(data_complete[1:10,2]))
View(week)
Sys.setlocale(category = "LC_ALL", locale = "en-US")
week<-weekdays(as.Date(data_complete[1:10,2]))
View(week)
Sys.setlocale(category = "LC_TIME", locale = "en-US")
sys.timezone()
sys.time90
sys.time()
Sys.setlocale("LC_TIME", "English")
View(week)
week<-weekdays(as.Date(data_complete[1:10,2]))
View(week)
week<-weekdays(as.Date(data_complete[,2]))
View(week)
week[which(week$x== "Sunday")|(week$x== "Saturday")]<-"weekend"
week[which(week== "Sunday")|(week== "Saturday")]<-"weekend"
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
View(data_complete)
data_complete$day_of_week[which(data_complete$day_of_week== "Sunday")|(data_complete$day_of_week== "Saturday")]<-"weekend"
data_complete$day_of_week[which(data_complete$day_of_week== "Sunday")||(data_complete$day_of_week== "Saturday")]<-"weekend"
data_complete$day_of_week[which(data_complete$day_of_week!= "Sunday")||(data_complete$day_of_week!= "Saturday")]<-"weekday"
str(data_complete)
summary(data_complete)
summary(as.factor(data_complete$day_of_week))
Sys.setlocale("LC_TIME", "English")
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
data_complete$day_of_week[which(data_complete$day_of_week== "Sunday")|(data_complete$day_of_week== "Saturday")]<-"weekend"
data_complete$day_of_week[which(data_complete$day_of_week!="weekend")]<-"weekday"
summary(data_complete)
summary(as.factor(data_complete$day_of_week))
View(data_complete)
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
data_complete$day_of_week[which(data_complete$day_of_week== "Sunday")||(data_complete$day_of_week== "Saturday")]<-"weekend"
data_complete$day_of_week[which(data_complete$day_of_week!="weekend")]<-"weekday"
summary(data_complete)
summary(as.factor(data_complete$day_of_week))
View(data_complete)
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
data_complete$day_of_week[which(data_complete$day_of_week == "Sunday")||(data_complete$day_of_week == "Saturday")]<-"weekend"
data_complete$day_of_week[which(data_complete$day_of_week != "weekend")]<-"weekday"
summary(data_complete)
View(data_complete)
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
data_complete$day_of_week[which(data_complete$day_of_week == "Sunday")||(data_complete$day_of_week == "Saturday")]<-"weekend"
View(data_complete)
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
data_complete$day_of_week[which(data_complete$day_of_week == "Sunday"||data_complete$day_of_week == "Saturday"]<-"weekend"
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
data_complete$day_of_week[which(data_complete$day_of_week == "Sunday" | data_complete$day_of_week == "Saturday")]<-"weekend"
View(data_complete)
summary(as.factor(data_complete$day_of_week))
data_complete$day_of_week[which(data_complete$day_of_week!="weekend")]<-"weekday"
View(data_complete)
summary(as.factor(data_complete$day_of_week))
qplot(interval,steps , data=data_complete,color = Place,geom="line",facets = . ~ day_of-week)+labs(title = "Emissions From vehicles by City  from 1999-2008")
library(ggplot2)
qplot(interval,steps , data=data_complete,color = Place,geom="line",facets = . ~ day_of-week)+labs(title = "Emissions From vehicles by City  from 1999-2008")
qplot(interval,steps , data=data_complete,geom="line",facets = . ~ day_of-week)+labs(title = "Emissions From vehicles by City  from 1999-2008")
qplot(interval,steps , data=data_complete,geom="line",facets = . ~ data_complete$day_of-week)+labs(title = "Emissions From vehicles by City  from 1999-2008")
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ data_complete$day_of-week)+labs(title = "Emissions From vehicles by City  from 1999-2008")
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ data_complete$day_of-week)
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ data_complete$day_of_week)
Sys.setlocale("LC_TIME", "English")
data_complete$day_of_week<-weekdays(as.Date(data_complete[,2]))
data_complete$day_of_week[which(data_complete$day_of_week == "Sunday" | data_complete$day_of_week == "Saturday")]<-"weekend"
data_complete$day_of_week[which(data_complete$day_of_week!="weekend")]<-"weekday"
data_complete$day_of_week<-as.factor(data_complete$day_of_week)
summary(data_complete)
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ data_complete$day_of-week)
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ data_complete$day_of_week)
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ data_complete$day_of_week)
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = ". ~ data_complete$day_of_week")
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ data_complete$day_of_week)
qplot(data_complete$interval,data_complete$steps ,geom="line",facets = . ~ day_of_week)
qplot(data_complete$interval,data_complete$steps,data=data_complete ,geom="line",facets = . ~ day_of_week)
mean_interval<-aggregate(data_complete$steps, by=list(data_complete$interval,data_complete$day_of_week),
FUN=mean, na.rm=TRUE)
colnames(mean_interval)<-c("interval","Day Fo Week","steps")
VIew(mean_interval)
View(mean_interval)
mean_interval<-aggregate(data_complete$steps, by=list(data_complete$interval,data_complete$day_of_week),
FUN=mean, na.rm=TRUE)
colnames(mean_interval)<-c("interval","day_of_week","steps")
qplot(data_complete$interval,data_complete$steps,data=data_complete ,geom="line",facets = . ~ day_of_week)
qplot(mean_interval$interval,mean_interval$steps,data=mean_interval ,geom="line",facets = . ~ day_of_week)
qplot(mean_interval$interval,mean_interval$steps,data=mean_interval ,geom="line",facets = day_of_week . ~ )
qplot(mean_interval$interval,mean_interval$steps,data=mean_interval ,geom="line",facets = day_of_week . ~ )
qplot(mean_interval$interval,mean_interval$steps,data=mean_interval ,geom="line",facets = day_of_week  ~ )
qplot(mean_interval$interval,mean_interval$steps,data=mean_interval ,geom="line",facets =. day_of_week  ~ )
qplot(mean_interval$interval,mean_interval$steps,data=mean_interval ,geom="line",facets = . ~ day_of_week)
library(lattice)
xyplot(mean_interval$interval,mean_interval$steps|mean_interval$day_of_week, layout = c(1, 2))
library(lattice)
xyplot(mean_interval$steps,mean_interval$interval|mean_interval$day_of_week, layout = c(1, 2))
library(lattice)
xyplot(mean_interval$steps,as.numeric(mean_interval$interval)|mean_interval$day_of_week, layout = c(1, 2))
?xyplot
library(lattice)
xyplot(mean_interval$steps~as.numeric(mean_interval$interval)|mean_interval$day_of_week, layout = c(1, 2))
library(lattice)
xyplot(mean_interval$steps~as.numeric(mean_interval$interval)|mean_interval$day_of_week, layout = c(1, 2),type="l")
library(lattice)
xyplot(mean_interval$steps~as.numeric(mean_interval$interval)|mean_interval$day_of_week, layout = c(1, 2),type="l",xlab="Interval",ylab="Number of Steps")
